from fastapi import FastAPI
from fastapi.responses import FileResponse
import pandas as pd
import matplotlib.pyplot as plt
import os

app = FastAPI()

# üìÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
DATA_FILE = "sales_data.csv"
PLOT_DIR = "plots"
os.makedirs(PLOT_DIR, exist_ok=True)

# –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º
if not os.path.exists(DATA_FILE):
    data = [
        ["2024-09-01", "USA", "Electronics", 12000, 3000],
        ["2024-09-02", "Germany", "Clothing", 8500, 2200],
        ["2024-09-03", "France", "Electronics", 9000, 2100],
        ["2024-09-04", "USA", "Furniture", 11000, 2500],
        ["2024-09-05", "Germany", "Electronics", 13000, 3100],
        ["2024-09-06", "France", "Clothing", 9500, 2000],
        ["2024-09-07", "USA", "Clothing", 8800, 1900],
        ["2024-09-08", "Germany", "Furniture", 10200, 2800],
        ["2024-09-09", "France", "Furniture", 12000, 2900],
        ["2024-09-10", "USA", "Electronics", 12500, 3200],
    ]
    df = pd.DataFrame(data, columns=["Date", "Country", "Category", "Sales", "Profit"])
    df.to_csv(DATA_FILE, index=False)

# üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv(DATA_FILE)

# üîç –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_countries():
    return df["Country"].unique().tolist()

def summary_by_country():
    return df.groupby("Country")[["Sales", "Profit"]].sum().reset_index().to_dict(orient="records")

def category_sales(country):
    filtered = df[df["Country"] == country]
    return filtered.groupby("Category")["Sales"].sum().reset_index().to_dict(orient="records")

def plot_sales_trend(country):
    filtered = df[df["Country"] == country]
    filtered["Date"] = pd.to_datetime(filtered["Date"])
    filtered = filtered.sort_values("Date")
    plt.figure(figsize=(8, 5))
    plt.plot(filtered["Date"], filtered["Sales"], label="Sales")
    plt.plot(filtered["Date"], filtered["Profit"], label="Profit")
    plt.title(f"{country} Sales & Profit Trend")
    plt.xlabel("Date")
    plt.ylabel("Amount")
    plt.legend()
    path = f"{PLOT_DIR}/{country.lower()}_sales.png"
    plt.savefig(path)
    plt.close()
    return path

def plot_category_pie():
    category_totals = df.groupby("Category")["Sales"].sum()
    plt.figure(figsize=(6, 6))
    category_totals.plot.pie(autopct="%1.1f%%")
    plt.title("Sales by Category")
    path = f"{PLOT_DIR}/category_pie.png"
    plt.savefig(path)
    plt.close()
    return path

def top_country():
    totals = df.groupby("Country")["Sales"].sum()
    return totals.idxmax(), totals.max()

# üöÄ FastAPI –º–∞—Ä—à—Ä—É—Ç—ã
@app.get("/countries")
def countries():
    return {"countries": get_countries()}

@app.get("/sales/summary")
def sales_summary():
    return {"summary": summary_by_country()}

@app.get("/sales/{country}")
def sales_by_category(country: str):
    return {"category_sales": category_sales(country)}

@app.get("/plot/sales/{country}")
def sales_plot(country: str):
    path = plot_sales_trend(country)
    return FileResponse(path, media_type="image/png")

@app.get("/plot/categories")
def category_plot():
    path = plot_category_pie()
    return FileResponse(path, media_type="image/png")

@app.get("/top-country")
def top_sales_country():
    country, sales = top_country()
    return {"top_country": country, "total_sales": sales}
